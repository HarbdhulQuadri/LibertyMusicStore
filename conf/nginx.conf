# http://uwsgi-docs.readthedocs.org/en/latest/tutorials/Django_and_nginx.html

# the upstream component nginx needs to connect to
upstream django {
    # server unix:///path/to/your/mysite/mysite.sock; # for a file socket
    server 127.0.0.1:8001; # for a web port socket (we'll use this first)
}

server {
    listen libertymusicstore.net:80;
    server_name libertymusicstore.net;
    rewrite ^/(.*) https://libertymusicstore.net/$1 permanent;
}

server {

    listen 443;
    server_name libertymusicstore.net;

    ssl on;
    ssl_certificate /srv/django/tatianastore/certs/tatianastore_bundle.crt;
    ssl_certificate_key /srv/django/tatianastore/certs/tatianastore.key;

    access_log /var/log/nginx/tatianastore.access.log;
    error_log /var/log/nginx/tatianastore.error.log;

    location /static/admin  {
        alias /srv/django/tatianastore/venv/lib/python2.7/site-packages/django/contrib/admin/static/admin;
    }

    location /srv/django/tatianastore/tatianastore/static {
        alias /srv/django/tatianastore/tatianastore/static; # your Django project's static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        include uwsgi_params;

        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header   X-Forwarded-Proto $scheme;

        uwsgi_pass 127.0.0.1:8001;
        uwsgi_param UWSGI_SCHEME https;
        uwsgi_pass_header X_FORWARDED_PROTO;
        uwsgi_pass_header X_REAL_IP;
    }

}

